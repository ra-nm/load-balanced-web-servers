{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "costCenter": {
            "type": "string",
            "metadata": {
                "description": "The value for the cost center tag on each resource."
            }
        },
        "webServerType": {
            "type": "string",
            "allowedValues": [
                "iis",
                "nginx"
            ],
            "metadata": {
                "description": "The type of web server to deploy."
            }
        },
        "vmNamePrefix": {
            "type": "string",
            "maxLength": 13,
            "metadata": {
                "description": "The prefix of the vm name.  A number will be appended to the end of the name of each vm created."
            }
        },
        "numberOfVms": {
            "type": "int",
            "maxValue": 5,
            "minValue": 3,
            "metadata": {
                "description": "The number of VMs to be deployed."
            }
        },
        "networkResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "Name of the resource group that the network lives in."
            }
        },
        "networkName": {
            "type": "string",
            "metadata": {
                "description": "Name of the network the VMs will be deployed to."
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of the subnet the VMs will be deployed to."
            }
        },
        "applicationSecurityGroupName": {
            "type": "string",
            "metadata": {
                "description": "Name of the application security group for this application in the Network Resource Group."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_B2S",
            "metadata": {
                "description": "The size of VMs that will be deployed."
            },
            "allowedValues": [
                "Standard_B2S",
                "Standard_B2MS"
            ]
        },
        "osDiskSizeInGb": {
            "type": "string",
            "allowedValues": [
                "32",
                "64",
                "128",
                "256"
            ],
            "defaultValue": "128",
            "metadata": {
                "description": "The size of the operating system disk."
            }
        },
        "administratorUserName": {
            "type": "string",
            "metadata": {
                "description": "Administrator User Name for the VMs."
            }
        },
        "administratorPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Administrator Password for the VMs."
            }
        },
        "storageAccountType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Premium_LRS"
            ],
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "The type of storage to use for the OS managed disk."
            }
        },
        "diagnosticsStorageAccountType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Premium_LRS"
            ],
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "The type of storage account to create for vm diagnostics."
            }
        },
        "publicIpDomainNameLabel": {
            "type": "string",
            "metadata": {
                "description": "Value to use as part of the IP address DNS name: <value>.<location>.cloudapp.azure.com"
            }
        },
        "httpPort": {
            "type": "int",
            "minValue": 80,
            "maxValue": 9999,
            "defaultValue": 80,
            "metadata": {
                "description": "The port number the web application will use for http traffic."
            }
        },
        "httpsPort": {
            "type": "int",
            "minValue": 443,
            "maxValue": 9999,
            "defaultValue": 443,
            "metadata": {
                "description": "The port number the web application will use for https traffic."
            }
        }
    },
    "variables": {
        "availabilitySetName": "[concat(parameters('vmNamePrefix'), 'AvSet')]",
        "loadBalancerName": "[concat(parameters('vmNamePrefix'), '-LB')]",
        "publicIpAddressName": "[concat(parameters('vmNamePrefix'), '-LB-PublicIP')]",
        "loadBalancerId": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
        "frontEndIPConfigID": "[concat(variables('loadBalancerId'),'/frontendIPConfigurations/', variables('publicIpAddressName'))]",
        "loadBalancerBackendAddressPoolName": "WebPool",
        "loadBalancerBackendAddressPoolId": "[concat(variables('loadBalancerId'),'/backendAddressPools/', variables('loadBalancerBackendAddressPoolName'))]",
        "virtualNetworkId": "[resourceId(parameters('networkResourceGroupName'), 'Microsoft.Network/virtualNetworks',parameters('networkName'))]",
        "subnetId": "[concat(variables('virtualNetworkId'), '/subnets/', parameters('subnetName'))]",
        "diagnosticsStorageAccountName": "[toLower(concat(parameters('vmNamePrefix'), 'diag'))]",
        "osProfileConfigurationName": {
            "iis": "windowsConfiguration",
            "nginx": "linuxConfiguration"
        },
        "imageReference": {
            "iis": {
                "publisher": "MicrosoftWindowsServer",
                "offer": "WindowsServer",
                "sku": "2016-Datacenter",
                "version": "latest"
            },
            "nginx": {
                "publisher": "Canonical",
                "offer": "UbuntuServer",
                "sku": "16.04-LTS",
                "version": "latest"
            }
        }
    },
    "resources": [
        {
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('availabilitySetName')]",
            "tags": {
                "Cost Center": "[parameters('costCenter')]"
            },
            "sku": {
                "name": "Aligned"
            },
            "location": "[resourceGroup().location]",
            "properties": {
                "platformFaultDomainCount": 3,
                "platformUpdateDomainCount": 3
            }
        },
        {
            "apiVersion": "2017-10-01",
            "name": "[variables('loadBalancerName')]",
            "type": "Microsoft.Network/loadBalancers",
            "tags": {
                "Cost Center": "[parameters('costCenter')]"
            },
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpAddressName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('publicIpAddressName')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('loadBalancerBackendAddressPoolName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "Http",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('loadBalancerBackendAddressPoolId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": "[parameters('httpPort')]",
                            "backendPort": "[parameters('httpPort')]",
                            "probe": {
                                "id": "[concat(variables('loadBalancerId'),'/probes/HttpProbe')]"
                            }
                        }
                    },
                    {
                        "name": "Https",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('loadBalancerBackendAddressPoolId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": "[parameters('httpsPort')]",
                            "backendPort": "[parameters('httpsPort')]",
                            "probe": {
                                "id": "[concat(variables('loadBalancerId'),'/probes/HttpsProbe')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "HttpProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": "[parameters('httpPort')]",
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    },
                    {
                        "name": "HttpsProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": "[parameters('httpsPort')]",
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-10-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIpAddressName')]",
            "tags": {
                "Cost Center": "[parameters('costCenter')]"
            },
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('publicIpDomainNameLabel')]"
                }
            }
        },
        {
            "name": "[variables('diagnosticsStorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "tags": {
                "Cost Center": "[parameters('costCenter')]"
            },
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('diagnosticsStorageAccountType')]"
            },
            "kind": "StorageV2",
            "properties": {
                "encryption": {
                    "keySource": "Microsoft.Storage",
                    "services": {
                        "blob": {
                            "enabled": true
                        }
                    }
                }
            }
        },
        {
            "name": "[concat(parameters('vmNamePrefix'), padLeft(copyIndex(), 2, '0'), '-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "tags": {
                "Cost Center": "[parameters('costCenter')]"
            },
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('loadBalancerName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('loadBalancerBackendAddressPoolId')]"
                                }
                            ],
                            "applicationSecurityGroups": [
                                {
                                    "id": "[resourceId(parameters('networkResourceGroupName'), 'Microsoft.Network/applicationSecurityGroups', parameters('applicationSecurityGroupName'))]"
                                }
                            ]
                        }
                    }
                ]
            },
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('numberOfVms')]"
            }
        },
        {
            "name": "[concat(parameters('vmNamePrefix'), padLeft(copyIndex(), 2, '0'))]",
            "type": "Microsoft.Compute/virtualMachines",
            "tags": {
                "Cost Center": "[parameters('costCenter')]"
            },
            "apiVersion": "2018-06-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat(parameters('vmNamePrefix'), padLeft(copyIndex(), 2, '0'), '-nic')]",
                "[variables('diagnosticsStorageAccountName')]",
                "[variables('availabilitySetName')]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmNamePrefix'), padLeft(copyIndex(), 2, '0'))]",
                    "adminUsername": "[parameters('administratorUserName')]",
                    "adminPassword": "[parameters('administratorPassword')]",
                    "[variables('osProfileConfigurationName')[parameters('webServerType')]]": {
                        "provisionVmAgent": true
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')[parameters('webServerType')]]",
                    "osDisk": {
                        "caching": "ReadOnly",
                        "createOption": "FromImage",
                        "name": "[concat(parameters('vmNamePrefix'), padLeft(copyIndex(), 2, '0'), '-OsDisk')]",
                        "managedDisk": {
                            "storageAccountType": "[parameters('storageAccountType')]"
                        },
                        "diskSizeGB": "[parameters('osDiskSizeInGb')]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), padLeft(copyIndex(), 2, '0'), '-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticsStorageAccountName')), '2015-06-15').primaryEndpoints['blob']]"
                    }
                }
            },
            "copy": {
                "name": "computeLoop",
                "count": "[parameters('numberOfVms')]"
            }
        },
        {
            "name": "[concat(parameters('vmNamePrefix'), padLeft(copyIndex(), 2, '0'),'/IisDsc')]",
            "condition": "[equals(parameters('webServerType'), 'iis')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "tags": {
                "Cost Center": "[parameters('costCenter')]"
            },
            "apiVersion": "2018-06-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat(parameters('vmNamePrefix'), padLeft(copyIndex(), 2, '0'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.76",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "ModulesUrl": "https://github.com/ra-nm/load-balanced-web-servers/blob/master/web/DSC/iisserver.zip?raw=true",
                    "ConfigurationFunction": "iisserver.ps1\\IisServer"
                }
            },
            "copy": {
                "name": "dscLoop",
                "count": "[parameters('numberOfVms')]"
            }
        },
        {
            "name": "[concat(parameters('vmNamePrefix'), padLeft(copyIndex(), 2, '0'),'/NginxInstall')]",
            "condition": "[equals(parameters('webServerType'), 'nginx')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "tags": {
                "Cost Center": "[parameters('costCenter')]"
            },
            "apiVersion": "2018-06-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat(parameters('vmNamePrefix'), padLeft(copyIndex(), 2, '0'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                    "commandToExecute": "apt-get -y update && apt-get -y install nginx"
                }
            },
            "copy": {
                "name": "nginxLoop",
                "count": "[parameters('numberOfVms')]"
            }
        }
    ],
    "outputs": {}
}